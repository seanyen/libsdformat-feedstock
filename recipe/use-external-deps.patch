--- CMakeLists.txt
+++ CMakeLists.txt
@@ -41,12 +41,14 @@
 
 set (project_cmake_dir ${PROJECT_SOURCE_DIR}/cmake
   CACHE PATH "Location of CMake scripts")
 
 message (STATUS "${PROJECT_NAME} version ${SDF_VERSION_FULL}")
 set (CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE ON)
+set (CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "")
+set (CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "")
 
 #============================================================================
 # We turn off extensions because (1) we do not ever want to use non-standard
 # compiler extensions, and (2) this variable is on by default, causing cmake
 # to choose the flag -std=gnu++14 instead of -std=c++14 when the C++14
 # features are requested. Explicitly turning this flag off will force cmake to
@@ -109,23 +111,12 @@
 set (sdf_cmake_dir ${PROJECT_SOURCE_DIR}/cmake CACHE PATH
      "Location of CMake scripts")
 
 include (${sdf_cmake_dir}/SDFUtils.cmake)
 
 message (STATUS "\n\n====== Finding 3rd Party Packages ======")
- # Use of tinyxml. System installation on UNIX. Internal copy on WIN
-if (UNIX)
-  message (STATUS "Using system tinyxml")
-  set (USE_EXTERNAL_TINYXML True)
-elseif(WIN32)
-  message (STATUS "Using internal tinyxml code")
-  set (USE_EXTERNAL_TINYXML False)
-else()
-  message (STATUS "Unknown platform")
-  BUILD_ERROR("Unknown platform")
-endif()
 include (${sdf_cmake_dir}/SearchForStuff.cmake)
 message (STATUS "----------------------------------------\n")
 
 #####################################
 # Set the default build type
 if (NOT CMAKE_BUILD_TYPE)

--- cmake/SDFUtils.cmake
+++ cmake/SDFUtils.cmake
@@ -138,16 +138,12 @@
         ${GTEST_SOURCE_file}
         ${SDF_BUILD_TESTS_EXTRA_EXE_SRCS})
     elseif(WIN32)
       add_executable(${BINARY_NAME}
         ${GTEST_SOURCE_file}
         ${SDF_BUILD_TESTS_EXTRA_EXE_SRCS}
-        ${PROJECT_SOURCE_DIR}/src/win/tinyxml/tinystr.cpp
-        ${PROJECT_SOURCE_DIR}/src/win/tinyxml/tinyxmlerror.cpp
-        ${PROJECT_SOURCE_DIR}/src/win/tinyxml/tinyxml.cpp
-        ${PROJECT_SOURCE_DIR}/src/win/tinyxml/tinyxmlparser.cpp
       )
     else()
       message(FATAL_ERROR "Unsupported platform")
     endif()
 
     add_dependencies(${BINARY_NAME}
@@ -167,12 +163,13 @@
       )
     elseif(WIN32)
       target_link_libraries(${BINARY_NAME}
         gtest.lib
         gtest_main.lib
         ${sdf_target}
+        ${tinyxml_LIBRARIES}
         ${IGNITION-MATH_LIBRARIES}
       )
 
       # Copy in sdformat library
       add_custom_command(TARGET ${BINARY_NAME}
         COMMAND ${CMAKE_COMMAND} -E copy_if_different

--- cmake/SearchForStuff.cmake
+++ cmake/SearchForStuff.cmake
@@ -51,25 +51,21 @@
     BUILD_ERROR("Couldn't find pkg-config for urdfdom")
   endif()
 endif()
 
 if (NOT DEFINED USE_INTERNAL_URDF OR NOT USE_INTERNAL_URDF)
   # check for urdfdom with pkg-config
-  pkg_check_modules(URDF urdfdom>=1.0)
+  pkg_check_modules(URDF urdfdom>=1.0 IMPORTED_TARGET)
 
   if (NOT URDF_FOUND)
     if (NOT DEFINED USE_INTERNAL_URDF)
       message(STATUS "Couldn't find urdfdom >= 1.0, using internal copy")
       set(USE_INTERNAL_URDF true)
     else()
       BUILD_ERROR("Couldn't find the urdfdom >= 1.0 system installation")
     endif()
-  else()
-    # what am I doing here? pkg-config and cmake
-    set(URDF_INCLUDE_DIRS ${URDF_INCLUDEDIR})
-    set(URDF_LIBRARY_DIRS ${URDF_LIBDIR})
   endif()
 endif()
 
 #################################################
 # Find ign command line utility:
 find_package(ignition-tools)

--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -174,14 +174,18 @@
 endif()
 
 message (STATUS "URDF_LIBRARY_DIRS=${URDF_LIBRARY_DIRS}")
 message (STATUS "URDF_LIBRARIES=${URDF_LIBRARIES}")
 
 if (NOT USE_INTERNAL_URDF)
-  target_link_libraries(${sdf_target} PRIVATE ${URDF_LIBRARIES})
+  if (TARGET PkgConfig::URDF)
+    target_link_libraries(${sdf_target} PRIVATE PkgConfig::URDF)
+  else()
+    target_link_libraries(${sdf_target} PRIVATE ${URDF_LIBRARIES})
+  endif()
 endif()
 
 sdf_install_library(${sdf_target})
 
 if(NOT WIN32)
   add_subdirectory(cmd)
 endif()

--- test/CMakeLists.txt
+++ test/CMakeLists.txt
@@ -12,7 +12,7 @@
 )
 
 if (USE_EXTERNAL_TINYXML)
-  include_directories(${tinyxml_INCLUDE_DIRS})
+  include_directories(${tinyxml_include_dirs})
   link_directories(${tinyxml_LIBRARY_DIRS})
 endif()
 
